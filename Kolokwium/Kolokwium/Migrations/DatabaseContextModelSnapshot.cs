// <auto-generated />
using System;
using Kolokwium.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kolokwium.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kolokwium.Models.Concert", b =>
                {
                    b.Property<int>("ConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcertId"));

                    b.Property<int>("AvailableTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ConcertId");

                    b.ToTable("Concert");

                    b.HasData(
                        new
                        {
                            ConcertId = 1,
                            AvailableTickets = 5000,
                            Date = new DateTime(2025, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zorza festival"
                        },
                        new
                        {
                            ConcertId = 2,
                            AvailableTickets = 20000,
                            Date = new DateTime(2027, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roztanczony Narodowy"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "Damian",
                            LastName = "Lewandowski",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Janek",
                            LastName = "Dobrowolski",
                            PhoneNumber = "324567912"
                        },
                        new
                        {
                            CustomerId = 3,
                            FirstName = "Wojtek",
                            LastName = "Szczesny",
                            PhoneNumber = "754921283"
                        },
                        new
                        {
                            CustomerId = 4,
                            FirstName = "Olaf",
                            LastName = "Piatek",
                            PhoneNumber = "384732193"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.PurchasedTicket", b =>
                {
                    b.Property<int>("TicketConcertId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TicketConcertId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PurchasedTicket");

                    b.HasData(
                        new
                        {
                            TicketConcertId = 2,
                            CustomerId = 4,
                            PurchaseDate = new DateTime(2025, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TicketConcertId = 4,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2027, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            SeatNumber = 50,
                            SerialNumber = "A123"
                        },
                        new
                        {
                            TicketId = 2,
                            SeatNumber = 100,
                            SerialNumber = "B456"
                        },
                        new
                        {
                            TicketId = 3,
                            SeatNumber = 150,
                            SerialNumber = "C789"
                        },
                        new
                        {
                            TicketId = 4,
                            SeatNumber = 200,
                            SerialNumber = "D247"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.TicketConcert", b =>
                {
                    b.Property<int>("TicketConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketConcertId"));

                    b.Property<int>("ConcertId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("TicketConcertId");

                    b.HasIndex("ConcertId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketConcert");

                    b.HasData(
                        new
                        {
                            TicketConcertId = 1,
                            ConcertId = 1,
                            Price = 200m,
                            TicketId = 1
                        },
                        new
                        {
                            TicketConcertId = 2,
                            ConcertId = 1,
                            Price = 400m,
                            TicketId = 2
                        },
                        new
                        {
                            TicketConcertId = 3,
                            ConcertId = 2,
                            Price = 600m,
                            TicketId = 3
                        },
                        new
                        {
                            TicketConcertId = 4,
                            ConcertId = 2,
                            Price = 800m,
                            TicketId = 4
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.PurchasedTicket", b =>
                {
                    b.HasOne("Kolokwium.Models.Customer", "Customer")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolokwium.Models.TicketConcert", "TicketConcert")
                        .WithMany("PurchasedTickets")
                        .HasForeignKey("TicketConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("TicketConcert");
                });

            modelBuilder.Entity("Kolokwium.Models.TicketConcert", b =>
                {
                    b.HasOne("Kolokwium.Models.Concert", "Concert")
                        .WithMany("TicketConcerts")
                        .HasForeignKey("ConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolokwium.Models.Ticket", "Ticket")
                        .WithMany("TicketConcerts")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concert");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Kolokwium.Models.Concert", b =>
                {
                    b.Navigation("TicketConcerts");
                });

            modelBuilder.Entity("Kolokwium.Models.Customer", b =>
                {
                    b.Navigation("PurchasedTickets");
                });

            modelBuilder.Entity("Kolokwium.Models.Ticket", b =>
                {
                    b.Navigation("TicketConcerts");
                });

            modelBuilder.Entity("Kolokwium.Models.TicketConcert", b =>
                {
                    b.Navigation("PurchasedTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
